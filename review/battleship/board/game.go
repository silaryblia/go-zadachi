package main

import (
	"fmt"
)

// Game –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–≥—Ä—É
type Game struct {
	Player  *Player
	Running bool
}

type GameImpls interface {
	Start()
	Stop()
}

// NewGame —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É
func NewGame() *Game {
	return &Game{
		Player: Player.NewPlayer("Player 1"),
	}
}

// Start –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É
func (g *Game) Start() {
	fmt.Println("üöÄ –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!")
	g.Running = true

	// –†–∞–∑–º–µ—â–∞–µ–º –∫–æ—Ä–∞–±–ª–∏
	fmt.Println("üõ≥Ô∏è  –†–∞–∑–º–µ—â–∞–µ–º –∫–æ—Ä–∞–±–ª–∏...")
	g.Player.PlaceShipsRandomly()

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
	if g.Player.Board.IsValidPlacement() {
		fmt.Println("‚úÖ –ö–æ—Ä–∞–±–ª–∏ —Ä–∞–∑–º–µ—â–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
		fmt.Printf("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–∞–±–ª–µ–π: %d\n", g.Player.Board.GetShipsCount())
		fmt.Printf("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ª—É–±: %d\n", g.Player.Board.GetShipCells())
	} else {
		fmt.Println("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–æ—Ä–∞–±–ª–µ–π!")
		g.Stop()
		return
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ
	fmt.Printf("\nüéØ –ü–æ–ª–µ –∏–≥—Ä–æ–∫–∞:\n")
	g.Player.B()

	fmt.Println("üéÆ –ò–≥—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ –Ω–∞—á–∞–ª—É!")
}

// Stop –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–≥—Ä—É
func (g *Game) Stop() {
	fmt.Println("üõë –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
	g.Running = false
}
